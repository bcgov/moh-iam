{"version":3,"sources":["../../../src/app/content/moh-app-realm-account/AccountPage.tsx"],"names":["React","Form","FormGroup","TextInput","PageSection","PageSectionVariants","AccountServiceContext","Msg","ContentPage","AccountPage","Component","constructor","props","context","features","isRegistrationEmailAsUsername","errors","username","firstName","lastName","email","formFields","attributes","DEFAULT_STATE","fetchPersonalInfo","doGet","then","response","setState","data","locale","render","fields","state","light","undefined","localize"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  TextInput,\r\n  PageSection,\r\n  PageSectionVariants,\r\n} from \"@patternfly/react-core\";\r\n\r\nimport { HttpResponse } from \"../../account-service/account.service\";\r\nimport { AccountServiceContext } from \"../../account-service/AccountServiceContext\";\r\nimport { Features } from \"../../widgets/features\";\r\nimport { Msg } from \"../../widgets/Msg\";\r\nimport { ContentPage } from \"../ContentPage\";\r\n\r\ndeclare const features: Features;\r\ndeclare const locale: string;\r\n\r\ninterface AccountPageProps {}\r\n\r\ninterface FormFields {\r\n  readonly username?: string;\r\n  readonly firstName?: string;\r\n  readonly lastName?: string;\r\n  readonly email?: string;\r\n  attributes?: { locale?: [string] };\r\n}\r\n\r\ninterface AccountPageState {\r\n  readonly errors: FormFields;\r\n  readonly formFields: FormFields;\r\n}\r\n\r\nexport class AccountPage extends React.Component<\r\n  AccountPageProps,\r\n  AccountPageState\r\n> {\r\n  static contextType = AccountServiceContext;\r\n  context: React.ContextType<typeof AccountServiceContext>;\r\n  private isRegistrationEmailAsUsername: boolean =\r\n    features.isRegistrationEmailAsUsername;\r\n  private readonly DEFAULT_STATE: AccountPageState = {\r\n    errors: {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n    },\r\n    formFields: {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      attributes: {},\r\n    },\r\n  };\r\n\r\n  public state: AccountPageState = this.DEFAULT_STATE;\r\n\r\n  public constructor(\r\n    props: AccountPageProps,\r\n    context: React.ContextType<typeof AccountServiceContext>\r\n  ) {\r\n    super(props);\r\n    this.context = context;\r\n\r\n    this.fetchPersonalInfo();\r\n  }\r\n\r\n  private fetchPersonalInfo(): void {\r\n    this.context!.doGet<FormFields>(\"/\").then(\r\n      (response: HttpResponse<FormFields>) => {\r\n        this.setState(this.DEFAULT_STATE);\r\n        const formFields = response.data;\r\n        if (!formFields!.attributes) {\r\n          formFields!.attributes = { locale: [locale] };\r\n        } else if (!formFields!.attributes.locale) {\r\n          formFields!.attributes.locale = [locale];\r\n        }\r\n\r\n        this.setState({ ...{ formFields: formFields as FormFields } });\r\n      }\r\n    );\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    const fields: FormFields = this.state.formFields;\r\n    return (\r\n      <ContentPage title=\"Account Information\">\r\n        <PageSection isFilled variant={PageSectionVariants.light}>\r\n          <Form className=\"personal-info-form\">\r\n            {!this.isRegistrationEmailAsUsername &&\r\n              fields.username != undefined && (\r\n                <FormGroup label={Msg.localize(\"username\")} fieldId=\"user-name\">\r\n                  <TextInput\r\n                    isDisabled\r\n                    type=\"text\"\r\n                    id=\"user-name\"\r\n                    name=\"username\"\r\n                    value={this.state.formFields.username}\r\n                  ></TextInput>\r\n                </FormGroup>\r\n              )}\r\n\r\n            <FormGroup label={Msg.localize(\"email\")} fieldId=\"email-address\">\r\n              <TextInput\r\n                isDisabled\r\n                type=\"email\"\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                maxLength={254}\r\n                value={fields.email}\r\n              ></TextInput>\r\n            </FormGroup>\r\n            <FormGroup label={Msg.localize(\"firstName\")} fieldId=\"first-name\">\r\n              <TextInput\r\n                isDisabled\r\n                type=\"text\"\r\n                id=\"first-name\"\r\n                name=\"firstName\"\r\n                maxLength={254}\r\n                value={fields.firstName}\r\n              ></TextInput>\r\n            </FormGroup>\r\n            <FormGroup label={Msg.localize(\"lastName\")} fieldId=\"last-name\">\r\n              <TextInput\r\n                isDisabled\r\n                type=\"text\"\r\n                id=\"last-name\"\r\n                name=\"lastName\"\r\n                maxLength={254}\r\n                value={fields.lastName}\r\n              ></TextInput>\r\n            </FormGroup>\r\n          </Form>\r\n        </PageSection>\r\n      </ContentPage>\r\n    );\r\n  }\r\n}\r\n"],"file":"AccountPage.js"}