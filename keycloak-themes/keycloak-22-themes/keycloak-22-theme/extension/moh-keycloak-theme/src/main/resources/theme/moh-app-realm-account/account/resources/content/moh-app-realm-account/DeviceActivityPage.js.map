{"version":3,"sources":["../../../src/app/content/moh-app-realm-account/DeviceActivityPage.tsx"],"names":["React","AccountServiceContext","TimeUtil","Button","DataList","DataListItem","DataListItemRow","DataListContent","DescriptionList","DescriptionListTerm","DescriptionListDescription","DescriptionListGroup","Grid","GridItem","Label","PageSection","PageSectionVariants","Title","Tooltip","SplitItem","Split","DesktopIcon","MobileAltIcon","SyncAltIcon","Msg","ContinueCancelModal","KeycloakContext","ContentPage","ContentAlert","DeviceActivityPage","Component","constructor","props","context","keycloakService","doDelete","then","logout","device","session","encodeURIComponent","id","fetchDevices","success","browser","os","state","devices","doGet","response","console","log","moveCurrentToTop","data","setState","currentDevice","forEach","index","current","splice","unshift","sessions","currentSession","time","format","elementId","item","element","substring","findDeviceTypeIcon","deviceType","mobile","findOS","toLowerCase","includes","localize","findOSVersion","osVersion","makeClientsString","clients","clientsString","client","clientName","hasOwnProperty","undefined","clientId","length","isShowSignOutAll","render","light","bind","keycloak","signOutAll","map","deviceIndex","sessionIndex","signOutSession","sm","lg","ipAddress","lastAccess","started","expires"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { HttpResponse } from \"../../account-service/account.service\";\r\nimport { AccountServiceContext } from \"../../account-service/AccountServiceContext\";\r\nimport TimeUtil from \"../../util/TimeUtil\";\r\n\r\nimport {\r\n  Button,\r\n  DataList,\r\n  DataListItem,\r\n  DataListItemRow,\r\n  DataListContent,\r\n  DescriptionList,\r\n  DescriptionListTerm,\r\n  DescriptionListDescription,\r\n  DescriptionListGroup,\r\n  Grid,\r\n  GridItem,\r\n  Label,\r\n  PageSection,\r\n  PageSectionVariants,\r\n  Title,\r\n  Tooltip,\r\n  SplitItem,\r\n  Split,\r\n} from \"@patternfly/react-core\";\r\n\r\nimport {\r\n  DesktopIcon,\r\n  MobileAltIcon,\r\n  SyncAltIcon,\r\n} from \"@patternfly/react-icons\";\r\n\r\nimport { Msg } from \"../../widgets/Msg\";\r\nimport { ContinueCancelModal } from \"../../widgets/ContinueCancelModal\";\r\nimport { KeycloakService } from \"../../keycloak-service/keycloak.service\";\r\nimport { KeycloakContext } from \"../../keycloak-service/KeycloakContext\";\r\n\r\nimport { ContentPage } from \"../ContentPage\";\r\nimport { ContentAlert } from \"../ContentAlert\";\r\n\r\nexport interface DeviceActivityPageProps {}\r\n\r\nexport interface DeviceActivityPageState {\r\n  devices: Device[];\r\n}\r\n\r\ninterface Device {\r\n  browser: string;\r\n  current: boolean;\r\n  device: string;\r\n  ipAddress: string;\r\n  lastAccess: number;\r\n  mobile: boolean;\r\n  os: string;\r\n  osVersion: string;\r\n  sessions: Session[];\r\n}\r\n\r\ninterface Session {\r\n  browser: string;\r\n  current: boolean;\r\n  clients: Client[];\r\n  expires: number;\r\n  id: string;\r\n  ipAddress: string;\r\n  lastAccess: number;\r\n  started: number;\r\n}\r\n\r\ninterface Client {\r\n  clientId: string;\r\n  clientName: string;\r\n}\r\n\r\nexport class DeviceActivityPage extends React.Component<\r\n  DeviceActivityPageProps,\r\n  DeviceActivityPageState\r\n> {\r\n  static contextType = AccountServiceContext;\r\n  context: React.ContextType<typeof AccountServiceContext>;\r\n\r\n  public constructor(\r\n    props: DeviceActivityPageProps,\r\n    context: React.ContextType<typeof AccountServiceContext>\r\n  ) {\r\n    super(props);\r\n    this.context = context;\r\n\r\n    this.state = {\r\n      devices: [],\r\n    };\r\n\r\n    this.fetchDevices();\r\n  }\r\n\r\n  private signOutAll = (keycloakService: KeycloakService) => {\r\n    this.context!.doDelete(\"/sessions\").then(() => {\r\n      keycloakService.logout();\r\n    });\r\n  };\r\n\r\n  private signOutSession = (device: Device, session: Session) => {\r\n    this.context!.doDelete(\"/sessions/\" + encodeURIComponent(session.id)).then(\r\n      () => {\r\n        this.fetchDevices();\r\n        ContentAlert.success(\"signedOutSession\", [session.browser, device.os]);\r\n      }\r\n    );\r\n  };\r\n\r\n  private fetchDevices(): void {\r\n    this.context!.doGet<Device[]>(\"/sessions/devices\").then(\r\n      (response: HttpResponse<Device[]>) => {\r\n        console.log({ response });\r\n\r\n        let devices: Device[] = this.moveCurrentToTop(\r\n          response.data as Device[]\r\n        );\r\n\r\n        this.setState({\r\n          devices: devices,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  // current device and session should display at the top of their respective lists\r\n  private moveCurrentToTop(devices: Device[]): Device[] {\r\n    let currentDevice: Device = devices[0];\r\n\r\n    devices.forEach((device: Device, index: number) => {\r\n      if (device.current) {\r\n        currentDevice = device;\r\n        devices.splice(index, 1);\r\n        devices.unshift(device);\r\n      }\r\n    });\r\n\r\n    currentDevice.sessions.forEach((session: Session, index: number) => {\r\n      if (session.current) {\r\n        const currentSession: Session[] = currentDevice.sessions.splice(\r\n          index,\r\n          1\r\n        );\r\n        currentDevice.sessions.unshift(currentSession[0]);\r\n      }\r\n    });\r\n\r\n    return devices;\r\n  }\r\n\r\n  private time(time: number): string {\r\n    return TimeUtil.format(time * 1000);\r\n  }\r\n\r\n  private elementId(\r\n    item: string,\r\n    session: Session,\r\n    element: string = \"session\"\r\n  ): string {\r\n    return `${element}-${session.id.substring(0, 7)}-${item}`;\r\n  }\r\n\r\n  private findDeviceTypeIcon(\r\n    session: Session,\r\n    device: Device\r\n  ): React.ReactNode {\r\n    const deviceType: boolean = device.mobile;\r\n    if (deviceType === true)\r\n      return (\r\n        <MobileAltIcon id={this.elementId(\"icon-mobile\", session, \"device\")} />\r\n      );\r\n\r\n    return (\r\n      <DesktopIcon id={this.elementId(\"icon-desktop\", session, \"device\")} />\r\n    );\r\n  }\r\n\r\n  private findOS(device: Device): string {\r\n    if (device.os.toLowerCase().includes(\"unknown\"))\r\n      return Msg.localize(\"unknownOperatingSystem\");\r\n\r\n    return device.os;\r\n  }\r\n\r\n  private findOSVersion(device: Device): string {\r\n    if (device.osVersion.toLowerCase().includes(\"unknown\")) return \"\";\r\n\r\n    return device.osVersion;\r\n  }\r\n\r\n  private makeClientsString(clients: Client[]): string {\r\n    let clientsString = \"\";\r\n    clients.forEach((client: Client, index: number) => {\r\n      let clientName: string;\r\n      if (\r\n        client.hasOwnProperty(\"clientName\") &&\r\n        client.clientName !== undefined &&\r\n        client.clientName !== \"\"\r\n      ) {\r\n        clientName = Msg.localize(client.clientName);\r\n      } else {\r\n        clientName = client.clientId;\r\n      }\r\n\r\n      clientsString += clientName;\r\n\r\n      if (clients.length > index + 1) clientsString += \", \";\r\n    });\r\n\r\n    return clientsString;\r\n  }\r\n\r\n  private isShowSignOutAll(devices: Device[]): boolean {\r\n    if (devices.length === 0) return false;\r\n    if (devices.length > 1) return true;\r\n    if (devices[0].sessions.length > 1) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <ContentPage title=\"Sessions\">\r\n        <PageSection isFilled variant={PageSectionVariants.light}>\r\n          <Split hasGutter className=\"pf-u-mb-lg\">\r\n            <SplitItem isFilled>\r\n              <div id=\"signedInDevicesTitle\" className=\"pf-c-content\">\r\n                <Title headingLevel=\"h2\" size=\"xl\">\r\n                  <Msg msgKey=\"signedInDevices\" />\r\n                </Title>\r\n              </div>\r\n            </SplitItem>\r\n            <SplitItem>\r\n              <Tooltip content={<Msg msgKey=\"refreshPage\" />}>\r\n                <Button\r\n                  aria-describedby=\"refresh page\"\r\n                  id=\"refresh-page\"\r\n                  variant=\"link\"\r\n                  onClick={this.fetchDevices.bind(this)}\r\n                  icon={<SyncAltIcon />}\r\n                >\r\n                  <Msg msgKey=\"refresh\" />\r\n                </Button>\r\n              </Tooltip>\r\n            </SplitItem>\r\n            <SplitItem>\r\n              <KeycloakContext.Consumer>\r\n                {(keycloak: KeycloakService) =>\r\n                  this.isShowSignOutAll(this.state.devices) && (\r\n                    <ContinueCancelModal\r\n                      buttonTitle=\"signOutAllDevices\"\r\n                      buttonId=\"sign-out-all\"\r\n                      modalTitle=\"signOutAllDevices\"\r\n                      modalMessage=\"signOutAllDevicesWarning\"\r\n                      onContinue={() => this.signOutAll(keycloak)}\r\n                    />\r\n                  )\r\n                }\r\n              </KeycloakContext.Consumer>\r\n            </SplitItem>\r\n          </Split>\r\n          <DataList\r\n            className=\"signed-in-device-list\"\r\n            aria-label={Msg.localize(\"signedInDevices\")}\r\n          >\r\n            <DataListItem\r\n              aria-labelledby=\"sessions\"\r\n              id=\"device-activity-sessions\"\r\n            >\r\n              {this.state.devices.map((device: Device, deviceIndex: number) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    {device.sessions.map(\r\n                      (session: Session, sessionIndex: number) => {\r\n                        return (\r\n                          <React.Fragment\r\n                            key={\r\n                              \"device-\" +\r\n                              deviceIndex +\r\n                              \"-session-\" +\r\n                              sessionIndex\r\n                            }\r\n                          >\r\n                            <DataListItemRow>\r\n                              <DataListContent\r\n                                aria-label=\"device-sessions-content\"\r\n                                isHidden={false}\r\n                                className=\"pf-u-flex-grow-1\"\r\n                              >\r\n                                <Grid\r\n                                  id={this.elementId(\"item\", session)}\r\n                                  className=\"signed-in-device-grid\"\r\n                                  hasGutter\r\n                                >\r\n                                  <GridItem\r\n                                    className=\"device-icon\"\r\n                                    span={1}\r\n                                    rowSpan={2}\r\n                                  >\r\n                                    <span>\r\n                                      {this.findDeviceTypeIcon(session, device)}\r\n                                    </span>\r\n                                  </GridItem>\r\n                                  <GridItem sm={8} md={9} span={10}>\r\n                                    <span\r\n                                      id={this.elementId(\"browser\", session)}\r\n                                      className=\"pf-u-mr-md session-title\"\r\n                                    >\r\n                                      {this.findOS(device)}{\" \"}\r\n                                      {this.findOSVersion(device)} /{\" \"}\r\n                                      {session.browser}\r\n                                    </span>\r\n                                    {session.current && (\r\n                                      <Label\r\n                                        color=\"green\"\r\n                                        id={this.elementId(\r\n                                          \"current-badge\",\r\n                                          session\r\n                                        )}\r\n                                      >\r\n                                        <Msg msgKey=\"currentSession\" />\r\n                                      </Label>\r\n                                    )}\r\n                                  </GridItem>\r\n                                  <GridItem\r\n                                    className=\"pf-u-text-align-right\"\r\n                                    sm={3}\r\n                                    md={2}\r\n                                    span={1}\r\n                                  >\r\n                                    {!session.current && (\r\n                                      <ContinueCancelModal\r\n                                        buttonTitle=\"doSignOut\"\r\n                                        buttonId={this.elementId(\r\n                                          \"sign-out\",\r\n                                          session\r\n                                        )}\r\n                                        modalTitle=\"doSignOut\"\r\n                                        buttonVariant=\"secondary\"\r\n                                        modalMessage=\"signOutWarning\"\r\n                                        onContinue={() =>\r\n                                          this.signOutSession(device, session)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  </GridItem>\r\n                                  <GridItem span={11}>\r\n                                    <DescriptionList\r\n                                      columnModifier={{\r\n                                        sm: \"2Col\",\r\n                                        lg: \"3Col\",\r\n                                      }}\r\n                                    >\r\n                                      <DescriptionListGroup>\r\n                                        <DescriptionListTerm>\r\n                                          {Msg.localize(\"ipAddress\")}\r\n                                        </DescriptionListTerm>\r\n                                        <DescriptionListDescription\r\n                                          id={this.elementId(\"ip\", session)}\r\n                                        >\r\n                                          {session.ipAddress}\r\n                                        </DescriptionListDescription>\r\n                                      </DescriptionListGroup>\r\n                                      <DescriptionListGroup>\r\n                                        <DescriptionListTerm>\r\n                                          {Msg.localize(\"lastAccessedOn\")}\r\n                                        </DescriptionListTerm>\r\n                                        <DescriptionListDescription\r\n                                          id={this.elementId(\r\n                                            \"last-access\",\r\n                                            session\r\n                                          )}\r\n                                        >\r\n                                          {this.time(session.lastAccess)}\r\n                                        </DescriptionListDescription>\r\n                                      </DescriptionListGroup>\r\n                                      <DescriptionListGroup>\r\n                                        <DescriptionListTerm>\r\n                                          {Msg.localize(\"clients\")}\r\n                                        </DescriptionListTerm>\r\n                                        <DescriptionListDescription\r\n                                          id={this.elementId(\r\n                                            \"clients\",\r\n                                            session\r\n                                          )}\r\n                                        >\r\n                                          {this.makeClientsString(\r\n                                            session.clients\r\n                                          )}\r\n                                        </DescriptionListDescription>\r\n                                      </DescriptionListGroup>\r\n                                      <DescriptionListGroup>\r\n                                        <DescriptionListTerm>\r\n                                          {Msg.localize(\"started\")}\r\n                                        </DescriptionListTerm>\r\n                                        <DescriptionListDescription\r\n                                          id={this.elementId(\r\n                                            \"started\",\r\n                                            session\r\n                                          )}\r\n                                        >\r\n                                          {this.time(session.started)}\r\n                                        </DescriptionListDescription>\r\n                                      </DescriptionListGroup>\r\n                                      <DescriptionListGroup>\r\n                                        <DescriptionListTerm>\r\n                                          {Msg.localize(\"expires\")}\r\n                                        </DescriptionListTerm>\r\n                                        <DescriptionListDescription\r\n                                          id={this.elementId(\r\n                                            \"expires\",\r\n                                            session\r\n                                          )}\r\n                                        >\r\n                                          {this.time(session.expires)}\r\n                                        </DescriptionListDescription>\r\n                                      </DescriptionListGroup>\r\n                                    </DescriptionList>\r\n                                  </GridItem>\r\n                                </Grid>\r\n                              </DataListContent>\r\n                            </DataListItemRow>\r\n                          </React.Fragment>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </DataListItem>\r\n          </DataList>\r\n        </PageSection>\r\n      </ContentPage>\r\n    );\r\n  }\r\n}\r\n"],"file":"DeviceActivityPage.js"}